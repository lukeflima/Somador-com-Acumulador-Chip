-- VHDL structural description generated from `sumaccdl_chip_extra`
--		date : Thu Oct 26 15:49:09 2017


-- Entity Declaration

ENTITY sumaccdl_chip_extra IS
  PORT (
  vss : linkage BIT ;	-- vss
  vdd : linkage BIT ;	-- vdd
  sel_1 : linkage BIT ;	-- sel_1
  sel_0 : linkage BIT ;	-- sel_0
  s : linkage BIT_VECTOR(3 DOWNTO 0) ;	-- s
  clk : linkage BIT ;	-- clk
  c_4 : linkage BIT ;	-- c_4
  a : linkage BIT_VECTOR(3 DOWNTO 0) 	-- a
  );
END sumaccdl_chip_extra;

-- Architecture Declaration

ARCHITECTURE VST OF sumaccdl_chip_extra IS
  COMPONENT pvsse_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pvssi_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pvsseck_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    cko : linkage BIT ;	-- cko
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pvdde_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pvddi_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pvddeck_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    cko : linkage BIT ;	-- cko
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT po_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    pad : linkage BIT ;	-- pad
    i : linkage BIT ;	-- i
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pi_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    t : linkage BIT ;	-- t
    pad : linkage BIT ;	-- pad
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT pck_sp
    port (
    vssi : linkage BIT ;	-- vssi
    vsse : linkage BIT ;	-- vsse
    vddi : linkage BIT ;	-- vddi
    vdde : linkage BIT ;	-- vdde
    pad : linkage BIT ;	-- pad
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT ao22_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT no2_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT na3_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT oa2a22_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i3 : linkage BIT ;	-- i3
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT noa22_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT o3_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT nao22_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT sff1_x4
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i : linkage BIT ;	-- i
    ck : linkage BIT 	-- ck
    );
  END COMPONENT;

  COMPONENT buf_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i : linkage BIT 	-- i
    );
  END COMPONENT;

  COMPONENT mx3_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT ;	-- i0
    cmd1 : linkage BIT ;	-- cmd1
    cmd0 : linkage BIT 	-- cmd0
    );
  END COMPONENT;

  COMPONENT nao2o22_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i3 : linkage BIT ;	-- i3
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT buf_x4
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i : linkage BIT 	-- i
    );
  END COMPONENT;

  COMPONENT nmx2_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT ;	-- i0
    cmd : linkage BIT 	-- cmd
    );
  END COMPONENT;

  COMPONENT a2_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT o2_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT inv_x8
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i : linkage BIT 	-- i
    );
  END COMPONENT;

  COMPONENT xr2_x1
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT mx2_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT ;	-- i0
    cmd : linkage BIT 	-- cmd
    );
  END COMPONENT;

  COMPONENT ao2o22_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    q : linkage BIT ;	-- q
    i3 : linkage BIT ;	-- i3
    i2 : linkage BIT ;	-- i2
    i1 : linkage BIT ;	-- i1
    i0 : linkage BIT 	-- i0
    );
  END COMPONENT;

  COMPONENT inv_x2
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT ;	-- vdd
    nq : linkage BIT ;	-- nq
    i : linkage BIT 	-- i
    );
  END COMPONENT;

  COMPONENT tie_x0
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT 	-- vdd
    );
  END COMPONENT;

  COMPONENT rowend_x0
    port (
    vss : linkage BIT ;	-- vss
    vdd : linkage BIT 	-- vdd
    );
  END COMPONENT;

  SIGNAL ai_3 : BIT;	-- ai 3
  SIGNAL core_naoa_3 : BIT;	-- core.naoa 3
  SIGNAL core_naoa_0 : BIT;	-- core.naoa 0
  SIGNAL ai_0 : BIT;	-- ai 0
  SIGNAL ai_1 : BIT;	-- ai 1
  SIGNAL core_naoa_1 : BIT;	-- core.naoa 1
  SIGNAL ai_2 : BIT;	-- ai 2
  SIGNAL core_naoa_2 : BIT;	-- core.naoa 2
  SIGNAL core_adder_xr2_x1_3_sig : BIT;	-- core.adder.xr2_x1_3_sig
  SIGNAL core_adder_xr2_x1_4_sig : BIT;	-- core.adder.xr2_x1_4_sig
  SIGNAL sel_0i : BIT;	-- sel_0i
  SIGNAL core_mux0_not_sel : BIT;	-- core.mux0.not_sel
  SIGNAL core_adder_aux23 : BIT;	-- core.adder.aux23
  SIGNAL core_adder_xr2_x1_2_sig : BIT;	-- core.adder.xr2_x1_2_sig
  SIGNAL core_outsum_0 : BIT;	-- core.outsum 0
  SIGNAL core_outmux0_0 : BIT;	-- core.outmux0 0
  SIGNAL core_outsum_1 : BIT;	-- core.outsum 1
  SIGNAL core_adder_inv_x2_sig : BIT;	-- core.adder.inv_x2_sig
  SIGNAL core_adder_not_b_1 : BIT;	-- core.adder.not_b 1
  SIGNAL core_adder_mbk_buf_aux16 : BIT;	-- core.adder.mbk_buf_aux16
  SIGNAL core_adder_not_aux13 : BIT;	-- core.adder.not_aux13
  SIGNAL core_accumulator_rtlalc_0_2 : BIT;	-- core.accumulator.rtlalc_0 2
  SIGNAL core_adder_inv_x2_3_sig : BIT;	-- core.adder.inv_x2_3_sig
  SIGNAL core_adder_inv_x2_4_sig : BIT;	-- core.adder.inv_x2_4_sig
  SIGNAL core_adder_not_aux21 : BIT;	-- core.adder.not_aux21
  SIGNAL core_adder_nao2o22_x1_sig : BIT;	-- core.adder.nao2o22_x1_sig
  SIGNAL core_adder_not_aux18 : BIT;	-- core.adder.not_aux18
  SIGNAL core_adder_aux11 : BIT;	-- core.adder.aux11
  SIGNAL core_adder_aux16 : BIT;	-- core.adder.aux16
  SIGNAL core_adder_xr2_x1_sig : BIT;	-- core.adder.xr2_x1_sig
  SIGNAL core_outmux0_1 : BIT;	-- core.outmux0 1
  SIGNAL core_accumulator_rtlalc_0_0 : BIT;	-- core.accumulator.rtlalc_0 0
  SIGNAL sel_1i : BIT;	-- sel_1i
  SIGNAL core_mux1_not_sel : BIT;	-- core.mux1.not_sel
  SIGNAL core_outsum_2 : BIT;	-- core.outsum 2
  SIGNAL core_outmux1_2 : BIT;	-- core.outmux1 2
  SIGNAL core_outmux0_2 : BIT;	-- core.outmux0 2
  SIGNAL core_adder_o3_x2_sig : BIT;	-- core.adder.o3_x2_sig
  SIGNAL core_adder_aux2 : BIT;	-- core.adder.aux2
  SIGNAL core_outacc_2 : BIT;	-- core.outacc 2
  SIGNAL core_adder_inv_x2_2_sig : BIT;	-- core.adder.inv_x2_2_sig
  SIGNAL core_outsum_3 : BIT;	-- core.outsum 3
  SIGNAL core_adder_not_b_0 : BIT;	-- core.adder.not_b 0
  SIGNAL core_outacc_0 : BIT;	-- core.outacc 0
  SIGNAL core_adder_xr2_x1_6_sig : BIT;	-- core.adder.xr2_x1_6_sig
  SIGNAL core_adder_xr2_x1_5_sig : BIT;	-- core.adder.xr2_x1_5_sig
  SIGNAL core_adder_aux22 : BIT;	-- core.adder.aux22
  SIGNAL core_adder_no2_x1_sig : BIT;	-- core.adder.no2_x1_sig
  SIGNAL core_adder_not_aux11 : BIT;	-- core.adder.not_aux11
  SIGNAL core_adder_not_aux12 : BIT;	-- core.adder.not_aux12
  SIGNAL core_adder_not_aux8 : BIT;	-- core.adder.not_aux8
  SIGNAL core_adder_not_aux5 : BIT;	-- core.adder.not_aux5
  SIGNAL core_adder_not_aux6 : BIT;	-- core.adder.not_aux6
  SIGNAL core_adder_aux6 : BIT;	-- core.adder.aux6
  SIGNAL core_adder_na3_x1_sig : BIT;	-- core.adder.na3_x1_sig
  SIGNAL core_adder_aux10 : BIT;	-- core.adder.aux10
  SIGNAL core_adder_ao22_x2_sig : BIT;	-- core.adder.ao22_x2_sig
  SIGNAL core_adder_aux0 : BIT;	-- core.adder.aux0
  SIGNAL core_outmux0_3 : BIT;	-- core.outmux0 3
  SIGNAL core_outmux1_0 : BIT;	-- core.outmux1 0
  SIGNAL core_accumulator_rtlalc_0_3 : BIT;	-- core.accumulator.rtlalc_0 3
  SIGNAL core_outacc_3 : BIT;	-- core.outacc 3
  SIGNAL cki : BIT;	-- cki
  SIGNAL core_outmux1_1 : BIT;	-- core.outmux1 1
  SIGNAL core_outmux1_3 : BIT;	-- core.outmux1 3
  SIGNAL core_outacc_1 : BIT;	-- core.outacc 1
  SIGNAL core_accumulator_rtlalc_0_1 : BIT;	-- core.accumulator.rtlalc_0 1
  SIGNAL c_4i : BIT;	-- c_4i
  SIGNAL si_0 : BIT;	-- si 0
  SIGNAL si_1 : BIT;	-- si 1
  SIGNAL si_2 : BIT;	-- si 2
  SIGNAL si_3 : BIT;	-- si 3
  SIGNAL coin_v_433_v_258_v_433_v_248 : BIT;	-- coin_-433_-258_-433_-248
  SIGNAL coin_v_595_v_474_v_595_v_356 : BIT;	-- coin_-595_-474_-595_-356
  SIGNAL coin_v_723_v_602_v_723_v_484 : BIT;	-- coin_-723_-602_-723_-484

BEGIN

  p_vsse : pvsse_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_vssi : pvssi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_vsseck : pvsseck_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    cko => cki,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_vdde : pvdde_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_vddi : pvddi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_vddeck : pvddeck_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    cko => cki,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_s3 : po_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    i => si_3,
    pad => s(3),
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_s2 : po_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    i => si_2,
    pad => s(2),
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_s1 : po_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    i => si_1,
    pad => s(1),
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_s0 : po_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    i => si_0,
    pad => s(0),
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_c_4 : po_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    i => c_4i,
    pad => c_4,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_a3 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => a(3),
    t => ai_3,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_a2 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => a(2),
    t => ai_2,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_a1 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => a(1),
    t => ai_1,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_a0 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => a(0),
    t => ai_0,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_sel_0 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => sel_0,
    t => sel_0i,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_sel_1 : pi_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => sel_1,
    t => sel_1i,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  p_clk : pck_sp
    PORT MAP (
    ck => coin_v_433_v_258_v_433_v_248,
    pad => clk,
    vdde => coin_v_595_v_474_v_595_v_356,
    vddi => vdd,
    vsse => coin_v_723_v_602_v_723_v_484,
    vssi => vss);
  core_bf_s_1_ins : buf_x2
    PORT MAP (
    i => core_outmux1_1,
    q => si_1,
    vdd => vdd,
    vss => vss);
  core_accumulator_s_1_ins : buf_x2
    PORT MAP (
    i => core_accumulator_rtlalc_0_1,
    q => core_outacc_1,
    vdd => vdd,
    vss => vss);
  core_adder_aux0_ins : a2_x2
    PORT MAP (
    i0 => core_outmux0_3,
    i1 => core_outacc_3,
    q => core_adder_aux0,
    vdd => vdd,
    vss => vss);
  core_accumulator_rtlalc_0_1_ins : sff1_x4
    PORT MAP (
    ck => cki,
    i => core_outmux1_1,
    q => core_accumulator_rtlalc_0_1,
    vdd => vdd,
    vss => vss);
  core_adder_ao22_x2_ins : ao22_x2
    PORT MAP (
    i0 => core_outacc_3,
    i1 => core_outmux0_3,
    i2 => core_adder_aux10,
    q => core_adder_ao22_x2_sig,
    vdd => vdd,
    vss => vss);
  core_accumulator_rtlalc_0_3_ins : sff1_x4
    PORT MAP (
    ck => cki,
    i => core_outmux1_3,
    q => core_accumulator_rtlalc_0_3,
    vdd => vdd,
    vss => vss);
  core_bf_s_0_ins : buf_x2
    PORT MAP (
    i => core_outmux1_0,
    q => si_0,
    vdd => vdd,
    vss => vss);
  core_accumulator_s_3_ins : buf_x2
    PORT MAP (
    i => core_accumulator_rtlalc_0_3,
    q => core_outacc_3,
    vdd => vdd,
    vss => vss);
  core_adder_cout_ins : ao22_x2
    PORT MAP (
    i0 => core_adder_ao22_x2_sig,
    i1 => core_adder_aux0,
    i2 => core_adder_na3_x1_sig,
    q => c_4i,
    vdd => vdd,
    vss => vss);
  core_bf_s_3_ins : buf_x2
    PORT MAP (
    i => core_outmux1_3,
    q => si_3,
    vdd => vdd,
    vss => vss);
  core_adder_no2_x1_ins : no2_x1
    PORT MAP (
    i0 => core_adder_not_aux12,
    i1 => core_adder_not_aux5,
    nq => core_adder_no2_x1_sig,
    vdd => vdd,
    vss => vss);
  core_adder_aux10_ins : noa22_x1
    PORT MAP (
    i0 => core_adder_not_aux8,
    i1 => core_adder_not_aux6,
    i2 => core_adder_not_aux5,
    nq => core_adder_aux10,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux6_ins : inv_x2
    PORT MAP (
    i => core_adder_aux6,
    nq => core_adder_not_aux6,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_6_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_aux22,
    i1 => core_adder_aux10,
    q => core_adder_xr2_x1_6_sig,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux12_ins : a2_x2
    PORT MAP (
    i0 => core_adder_not_aux11,
    i1 => core_adder_not_aux8,
    q => core_adder_not_aux12,
    vdd => vdd,
    vss => vss);
  core_adder_aux22_ins : xr2_x1
    PORT MAP (
    i0 => core_outacc_3,
    i1 => core_outmux0_3,
    q => core_adder_aux22,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_5_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_aux22,
    i1 => core_adder_no2_x1_sig,
    q => core_adder_xr2_x1_5_sig,
    vdd => vdd,
    vss => vss);
  core_adder_na3_x1_ins : na3_x1
    PORT MAP (
    i0 => core_adder_not_b_0,
    i1 => core_adder_not_aux12,
    i2 => core_adder_inv_x2_2_sig,
    nq => core_adder_na3_x1_sig,
    vdd => vdd,
    vss => vss);
  core_adder_inv_x2_2_ins : inv_x2
    PORT MAP (
    i => core_adder_aux0,
    nq => core_adder_inv_x2_2_sig,
    vdd => vdd,
    vss => vss);
  core_adder_not_b_0_ins : inv_x2
    PORT MAP (
    i => core_outacc_0,
    nq => core_adder_not_b_0,
    vdd => vdd,
    vss => vss);
  core_adder_s_3_ins : oa2a22_x2
    PORT MAP (
    i0 => core_outacc_0,
    i1 => core_adder_xr2_x1_6_sig,
    i2 => core_adder_xr2_x1_5_sig,
    i3 => core_adder_not_b_0,
    q => core_outsum_3,
    vdd => vdd,
    vss => vss);
  core_bf_s_2_ins : buf_x2
    PORT MAP (
    i => core_outmux1_2,
    q => si_2,
    vdd => vdd,
    vss => vss);
  core_adder_aux2_ins : a2_x2
    PORT MAP (
    i0 => core_outmux0_2,
    i1 => core_outacc_2,
    q => core_adder_aux2,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux8_ins : noa22_x1
    PORT MAP (
    i0 => core_outmux0_1,
    i1 => core_outacc_1,
    i2 => core_adder_aux2,
    nq => core_adder_not_aux8,
    vdd => vdd,
    vss => vss);
  core_adder_o3_x2_ins : o3_x2
    PORT MAP (
    i0 => core_outacc_1,
    i1 => core_outmux0_1,
    i2 => core_adder_aux2,
    q => core_adder_o3_x2_sig,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux5_ins : nao22_x1
    PORT MAP (
    i0 => core_outacc_2,
    i1 => core_outmux0_2,
    i2 => core_adder_o3_x2_sig,
    nq => core_adder_not_aux5,
    vdd => vdd,
    vss => vss);
  core_mux1_s_3_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux1_not_sel,
    i1 => core_outsum_3,
    i2 => sel_1i,
    i3 => core_outmux0_3,
    q => core_outmux1_3,
    vdd => vdd,
    vss => vss);
  core_mux1_not_sel_ins : inv_x8
    PORT MAP (
    i => sel_1i,
    nq => core_mux1_not_sel,
    vdd => vdd,
    vss => vss);
  core_accumulator_s_0_ins : buf_x2
    PORT MAP (
    i => core_accumulator_rtlalc_0_0,
    q => core_outacc_0,
    vdd => vdd,
    vss => vss);
  core_accumulator_rtlalc_0_0_ins : sff1_x4
    PORT MAP (
    ck => cki,
    i => core_outmux1_0,
    q => core_accumulator_rtlalc_0_0,
    vdd => vdd,
    vss => vss);
  core_mux1_s_2_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux1_not_sel,
    i1 => core_outsum_2,
    i2 => sel_1i,
    i3 => core_outmux0_2,
    q => core_outmux1_2,
    vdd => vdd,
    vss => vss);
  core_accumulator_rtlalc_0_2_ins : sff1_x4
    PORT MAP (
    ck => cki,
    i => core_outmux1_2,
    q => core_accumulator_rtlalc_0_2,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_ins : xr2_x1
    PORT MAP (
    i0 => core_outacc_2,
    i1 => core_outmux0_2,
    q => core_adder_xr2_x1_sig,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux11_ins : inv_x2
    PORT MAP (
    i => core_adder_aux11,
    nq => core_adder_not_aux11,
    vdd => vdd,
    vss => vss);
  core_accumulator_s_2_ins : buf_x2
    PORT MAP (
    i => core_accumulator_rtlalc_0_2,
    q => core_outacc_2,
    vdd => vdd,
    vss => vss);
  core_adder_aux16_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_xr2_x1_sig,
    i1 => core_outmux0_1,
    q => core_adder_aux16,
    vdd => vdd,
    vss => vss);
  core_adder_inv_x2_4_ins : inv_x2
    PORT MAP (
    i => core_adder_not_aux21,
    nq => core_adder_inv_x2_4_sig,
    vdd => vdd,
    vss => vss);
  core_adder_s_2_ins : mx3_x2
    PORT MAP (
    cmd0 => core_outacc_0,
    cmd1 => core_adder_aux6,
    i0 => core_adder_nao2o22_x1_sig,
    i1 => core_adder_inv_x2_4_sig,
    i2 => core_adder_inv_x2_3_sig,
    q => core_outsum_2,
    vdd => vdd,
    vss => vss);
  core_adder_inv_x2_3_ins : inv_x2
    PORT MAP (
    i => core_adder_not_aux18,
    nq => core_adder_inv_x2_3_sig,
    vdd => vdd,
    vss => vss);
  core_adder_nao2o22_x1_ins : nao2o22_x1
    PORT MAP (
    i0 => core_adder_aux11,
    i1 => core_adder_not_aux18,
    i2 => core_adder_not_aux21,
    i3 => core_adder_not_aux11,
    nq => core_adder_nao2o22_x1_sig,
    vdd => vdd,
    vss => vss);
  core_adder_inv_x2_ins : inv_x2
    PORT MAP (
    i => core_adder_aux16,
    nq => core_adder_inv_x2_sig,
    vdd => vdd,
    vss => vss);
  core_adder_mbk_buf_aux16 : buf_x4
    PORT MAP (
    i => core_adder_aux16,
    q => core_adder_mbk_buf_aux16,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux18_ins : nmx2_x1
    PORT MAP (
    cmd => core_adder_not_b_1,
    i0 => core_adder_mbk_buf_aux16,
    i1 => core_adder_not_aux13,
    nq => core_adder_not_aux18,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux13_ins : xr2_x1
    PORT MAP (
    i0 => core_outmux0_2,
    i1 => core_outacc_2,
    q => core_adder_not_aux13,
    vdd => vdd,
    vss => vss);
  core_adder_not_aux21_ins : ao2o22_x2
    PORT MAP (
    i0 => core_outacc_1,
    i1 => core_adder_inv_x2_sig,
    i2 => core_adder_not_aux13,
    i3 => core_adder_not_b_1,
    q => core_adder_not_aux21,
    vdd => vdd,
    vss => vss);
  core_mux1_s_1_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux1_not_sel,
    i1 => core_outsum_1,
    i2 => sel_1i,
    i3 => core_outmux0_1,
    q => core_outmux1_1,
    vdd => vdd,
    vss => vss);
  core_mux1_s_0_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux1_not_sel,
    i1 => core_outsum_0,
    i2 => sel_1i,
    i3 => core_outmux0_0,
    q => core_outmux1_0,
    vdd => vdd,
    vss => vss);
  core_adder_s_0_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_xr2_x1_2_sig,
    i1 => core_outmux0_0,
    q => core_outsum_0,
    vdd => vdd,
    vss => vss);
  core_adder_aux11_ins : a2_x2
    PORT MAP (
    i0 => sel_0i,
    i1 => core_outmux0_0,
    q => core_adder_aux11,
    vdd => vdd,
    vss => vss);
  core_adder_not_b_1_ins : inv_x2
    PORT MAP (
    i => core_outacc_1,
    nq => core_adder_not_b_1,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_3_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_aux23,
    i1 => core_adder_aux6,
    q => core_adder_xr2_x1_3_sig,
    vdd => vdd,
    vss => vss);
  core_adder_aux23_ins : xr2_x1
    PORT MAP (
    i0 => core_outacc_1,
    i1 => core_outmux0_1,
    q => core_adder_aux23,
    vdd => vdd,
    vss => vss);
  core_adder_aux6_ins : o2_x2
    PORT MAP (
    i0 => sel_0i,
    i1 => core_outmux0_0,
    q => core_adder_aux6,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_2_ins : xr2_x1
    PORT MAP (
    i0 => core_outacc_0,
    i1 => sel_0i,
    q => core_adder_xr2_x1_2_sig,
    vdd => vdd,
    vss => vss);
  core_mux0_not_sel_ins : inv_x8
    PORT MAP (
    i => sel_0i,
    nq => core_mux0_not_sel,
    vdd => vdd,
    vss => vss);
  core_adder_xr2_x1_4_ins : xr2_x1
    PORT MAP (
    i0 => core_adder_aux23,
    i1 => core_adder_aux11,
    q => core_adder_xr2_x1_4_sig,
    vdd => vdd,
    vss => vss);
  core_adder_s_1_ins : mx2_x2
    PORT MAP (
    cmd => core_outacc_0,
    i0 => core_adder_xr2_x1_4_sig,
    i1 => core_adder_xr2_x1_3_sig,
    q => core_outsum_1,
    vdd => vdd,
    vss => vss);
  core_inversor_s_2_ins : inv_x2
    PORT MAP (
    i => ai_2,
    nq => core_naoa_2,
    vdd => vdd,
    vss => vss);
  core_mux0_s_2_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux0_not_sel,
    i1 => core_naoa_2,
    i2 => sel_0i,
    i3 => ai_2,
    q => core_outmux0_2,
    vdd => vdd,
    vss => vss);
  core_inversor_s_3_ins : inv_x2
    PORT MAP (
    i => ai_3,
    nq => core_naoa_3,
    vdd => vdd,
    vss => vss);
  core_mux0_s_3_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux0_not_sel,
    i1 => core_naoa_3,
    i2 => sel_0i,
    i3 => ai_3,
    q => core_outmux0_3,
    vdd => vdd,
    vss => vss);
  core_inversor_s_1_ins : inv_x2
    PORT MAP (
    i => ai_1,
    nq => core_naoa_1,
    vdd => vdd,
    vss => vss);
  core_mux0_s_1_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux0_not_sel,
    i1 => core_naoa_1,
    i2 => sel_0i,
    i3 => ai_1,
    q => core_outmux0_1,
    vdd => vdd,
    vss => vss);
  core_mux0_s_0_ins : ao2o22_x2
    PORT MAP (
    i0 => core_mux0_not_sel,
    i1 => core_naoa_0,
    i2 => sel_0i,
    i3 => ai_0,
    q => core_outmux0_0,
    vdd => vdd,
    vss => vss);
  core_inversor_s_0_ins : inv_x2
    PORT MAP (
    i => ai_0,
    nq => core_naoa_0,
    vdd => vdd,
    vss => vss);
  core_tiex0_1 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_2 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_3 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_4 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_5 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_6 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_7 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_8 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_9 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_10 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_11 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_12 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_rowendx0_13 : rowend_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_14 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_rowendx0_15 : rowend_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_16 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_17 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_18 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_19 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_20 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_21 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_22 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_23 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_rowendx0_24 : rowend_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_25 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_26 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_27 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_28 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_29 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_30 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_31 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_32 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_33 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_34 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_35 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_36 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_37 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_38 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_39 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_40 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_41 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_42 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_43 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_44 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_45 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_46 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_tiex0_47 : tie_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);
  core_rowendx0_48 : rowend_x0
    PORT MAP (
    vdd => vdd,
    vss => vss);

end VST;
